(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{225:function(_,v,t){"use strict";t.r(v);var e=t(0),a=Object(e.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"java面试（一）：计算机网络"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java面试（一）：计算机网络"}},[_._v("#")]),_._v(" Java面试（一）：计算机网络")]),_._v(" "),t("h2",{attrs:{id:"osi-七层模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#osi-七层模型"}},[_._v("#")]),_._v(" OSI 七层模型")]),_._v(" "),t("p",[t("img",{attrs:{src:"/img/interview/OSI%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B.jpg",alt:"OSI七层模型"}})]),_._v(" "),t("ul",[t("li",[_._v("物理层：定义了数据传输介质的特性，用以建立、维护和拆除物理链路。")]),_._v(" "),t("li",[_._v("数据链路层：定义了如何对物理介质进行访问、将 "),t("code",[_._v("IP")]),_._v(" 数据报封装成帧或从帧中提取有效数据，上交网络层，并对帧进行差错检测。")]),_._v(" "),t("li",[_._v("网络层：为不同主机提供通信服务，将运输层产生的报文封装为 "),t("code",[_._v("IP")]),_._v(" 数据报，进行传送。同时负责选择合适的路由，决定如何将数据从发送方路由到接收方。")]),_._v(" "),t("li",[_._v("传输层：为主机间进程的通信提供通用的数据传输服务。")]),_._v(" "),t("li",[_._v("会话层：允许不同机器上的用户建立和管理会话关系")]),_._v(" "),t("li",[_._v("表示层：协商通信双方的通信语法，使得传输的数据在双方的解释一致。")]),_._v(" "),t("li",[_._v("应用层：为应用程序提供通过 "),t("code",[_._v("OSI")]),_._v(" 环境进行通信的接口。")])]),_._v(" "),t("h2",{attrs:{id:"tcp-ip-四层模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tcp-ip-四层模型"}},[_._v("#")]),_._v(" TCP/IP 四层模型")]),_._v(" "),t("p",[t("code",[_._v("OSI")]),_._v(" 模型过于复杂和庞大，实际广泛应用的是参考了 "),t("code",[_._v("OSI")]),_._v(" 模型的 "),t("code",[_._v("TCP/IP")]),_._v(" 四层模型。")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",[_._v("OSI")]),_._v(" "),t("th",[_._v("TCP/IP")]),_._v(" "),t("th",[_._v("网络协议")])])]),_._v(" "),t("tbody",[t("tr",[t("td",[_._v("应用层")]),_._v(" "),t("td",[_._v("应用层")]),_._v(" "),t("td",[_._v("HTTP、TFTP、SNMP、FTP、SMTP、DNS、Telnet")])]),_._v(" "),t("tr",[t("td",[_._v("表示层")]),_._v(" "),t("td"),_._v(" "),t("td")]),_._v(" "),t("tr",[t("td",[_._v("会话层")]),_._v(" "),t("td"),_._v(" "),t("td")]),_._v(" "),t("tr",[t("td",[_._v("传输层")]),_._v(" "),t("td",[_._v("传输层")]),_._v(" "),t("td",[_._v("TCP、UDP")])]),_._v(" "),t("tr",[t("td",[_._v("网络层")]),_._v(" "),t("td",[_._v("网际层")]),_._v(" "),t("td",[_._v("IP、ICMP、ARP、IGMP")])]),_._v(" "),t("tr",[t("td",[_._v("数据链路层")]),_._v(" "),t("td",[_._v("链路层")]),_._v(" "),t("td",[_._v("Ethernet、PPP")])]),_._v(" "),t("tr",[t("td",[_._v("物理层")]),_._v(" "),t("td"),_._v(" "),t("td")])])]),_._v(" "),t("h2",{attrs:{id:"tcp-协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tcp-协议"}},[_._v("#")]),_._v(" TCP 协议")]),_._v(" "),t("ul",[t("li",[_._v("面向连接、可靠的、基于字节流的传输层通信协议")]),_._v(" "),t("li",[_._v("将应用层数据分割成报文段并交给网络层传输给目标节点的 "),t("code",[_._v("TCP")]),_._v(" 层")]),_._v(" "),t("li",[_._v("数据报有序号，接收方接收成功则发送 "),t("code",[_._v("ACK")]),_._v(" 确认，否则重传")]),_._v(" "),t("li",[_._v("使用奇偶校验和函数检验数据在传输过程中是否有差错")])]),_._v(" "),t("h3",{attrs:{id:"tcp-三次握手"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tcp-三次握手"}},[_._v("#")]),_._v(" TCP 三次握手")]),_._v(" "),t("p",[_._v("三次握手用于创建 "),t("code",[_._v("TCP")]),_._v(" 连接。")]),_._v(" "),t("p",[t("img",{attrs:{src:"/img/interview/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B.png",alt:"TCP三次握手"}})]),_._v(" "),t("ul",[t("li",[_._v("第一次握手：建立连接时，客户端发送 "),t("code",[_._v("SYN(syn=x)")]),_._v(" 包到服务器，并进入 "),t("code",[_._v("SYN_SEND")]),_._v(" 状态，等待服务器确认。")]),_._v(" "),t("li",[_._v("第二次握手：服务器收到 "),t("code",[_._v("SYN")]),_._v(" 包，需要向客户端发送 "),t("code",[_._v("ACK(ack=x+1)")]),_._v(" 进行确认，同时也发送一个 "),t("code",[_._v("SYN(syn=y)")]),_._v(" 包，并进入 "),t("code",[_._v("SYN_RECV")]),_._v(" 状态。")]),_._v(" "),t("li",[_._v("第三次握手：客户端收到服务器的 "),t("code",[_._v("SYN")]),_._v(" 和 "),t("code",[_._v("ACK")]),_._v(" 包，向服务器发生 "),t("code",[_._v("ACK(ack=y+1)")]),_._v(" 确认包，发送完成后，双方进入 "),t("code",[_._v("ESTABLISHED")]),_._v(" 状态，完成三次握手。")])]),_._v(" "),t("h3",{attrs:{id:"tcp-四次挥手"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tcp-四次挥手"}},[_._v("#")]),_._v(" TCP 四次挥手")]),_._v(" "),t("p",[_._v("数据传输完毕后，可以通过四次挥手来关闭 "),t("code",[_._v("TCP")]),_._v(" 连接。")]),_._v(" "),t("ul",[t("li",[_._v("第一次挥手：客户端向服务器发生一个 "),t("code",[_._v("FIN")]),_._v("，用来关闭客户端到服务器的数据传送，客户端进入 "),t("code",[_._v("FIN_WAIT_1")]),_._v(" 状态。")]),_._v(" "),t("li",[_._v("第二次挥手：服务器收到 "),t("code",[_._v("FIN")]),_._v(" 后，发生一个 "),t("code",[_._v("ACK")]),_._v(" 给客户端，服务器进入 "),t("code",[_._v("CLOSE_WAIT")]),_._v(" 状态。")]),_._v(" "),t("li",[_._v("第三次挥手：服务发送一个 "),t("code",[_._v("FIN")]),_._v("，用来关闭服务器到客户端的数据传送，服务器进入 "),t("code",[_._v("LAST_ACK")]),_._v(" 状态。")]),_._v(" "),t("li",[_._v("第四次挥手：客户端收到 "),t("code",[_._v("FIN")]),_._v(" 后，进入 "),t("code",[_._v("TIME_WAIT")]),_._v(" 状态，接着发送一个 "),t("code",[_._v("ACK")]),_._v(" 给服务器，服务器收到后进入 "),t("code",[_._v("CLOSED")]),_._v(" 状态，完成四次挥手。")])]),_._v(" "),t("h2",{attrs:{id:"udp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#udp"}},[_._v("#")]),_._v(" UDP")]),_._v(" "),t("ul",[t("li",[_._v("面向非连接")]),_._v(" "),t("li",[_._v("不维护连接，支持向多个客户端传输相同的消息")]),_._v(" "),t("li",[_._v("数据包报头只有8个字节，额外开销小")]),_._v(" "),t("li",[_._v("尽最大努力交付，不保证可靠交付")]),_._v(" "),t("li",[_._v("面向报文，不对应用程序提交的报文进行拆分或合并")])]),_._v(" "),t("h2",{attrs:{id:"http"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[_._v("#")]),_._v(" HTTP")]),_._v(" "),t("h3",{attrs:{id:"get-和-post-请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#get-和-post-请求"}},[_._v("#")]),_._v(" GET 和 POST 请求")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("GET")]),_._v(" 请求的参数在 "),t("code",[_._v("URL")]),_._v(" 中且有长度限制，"),t("code",[_._v("POST")]),_._v(" 请求参数在报文 "),t("code",[_._v("body")]),_._v(" 中。")]),_._v(" "),t("li",[t("code",[_._v("GET")]),_._v(" 请求符合幂等性和安全性，"),t("code",[_._v("POST")]),_._v(" 请求不符合。")]),_._v(" "),t("li",[t("code",[_._v("GET")]),_._v(" 请求可以被缓存，"),t("code",[_._v("POST")]),_._v(" 请求不可以。")])]),_._v(" "),t("h3",{attrs:{id:"cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[_._v("#")]),_._v(" Cookie")]),_._v(" "),t("p",[t("code",[_._v("Cookie")]),_._v(" 是由服务器发给客户端的特殊信息（用户相关信息），以文本的形式存放在客户端，当客户端向服务器再次发送请求会在请求头中加入 "),t("code",[_._v("Cookie")]),_._v("。服务器收到 "),t("code",[_._v("Cookie")]),_._v(" 后会进行解析。")]),_._v(" "),t("h3",{attrs:{id:"session"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#session"}},[_._v("#")]),_._v(" Session")]),_._v(" "),t("p",[t("code",[_._v("Session")]),_._v(" 是服务器维护的与客户端的连接会话。由于存储在服务器上，相对于 "),t("code",[_._v("Cookie")]),_._v(" 安全性更高。")]),_._v(" "),t("h3",{attrs:{id:"https"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[_._v("#")]),_._v(" HTTPS")]),_._v(" "),t("h4",{attrs:{id:"ssl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ssl"}},[_._v("#")]),_._v(" SSL")]),_._v(" "),t("p",[t("code",[_._v("HTTPS")]),_._v(" 相对于 "),t("code",[_._v("HTTP")]),_._v(" 使用了 "),t("code",[_._v("SSL(TLS)")]),_._v(" 作为为网络通信提供安全及数据完整性的安全协议。"),t("code",[_._v("SSL")]),_._v(" 采用身份验证和数据加密来保证网络通信安全的数据的完整性。")]),_._v(" "),t("h4",{attrs:{id:"https-数据传输流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#https-数据传输流程"}},[_._v("#")]),_._v(" HTTPS 数据传输流程")]),_._v(" "),t("ul",[t("li",[_._v("浏览器将支持的加密算法发送给服务器")]),_._v(" "),t("li",[_._v("服务器选择一套浏览器支持的加密算法，以证书的形式回发给浏览器")]),_._v(" "),t("li",[_._v("浏览器验证证书合法性，如果合法，则结合证书公钥将客户端随机生成的对称密钥加密发送给服务器")]),_._v(" "),t("li",[_._v("服务器使用私钥解密对称秘钥，此后浏览器和服务器使用对称密钥进行加密通信。")])]),_._v(" "),t("h2",{attrs:{id:"socket"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket"}},[_._v("#")]),_._v(" Socket")]),_._v(" "),t("p",[t("code",[_._v("Socket")]),_._v(" 是对 "),t("code",[_._v("TCP/IP")]),_._v(" 协议的抽象，是操作系统对外开放的接口。")])])}),[],!1,null,null,null);v.default=a.exports}}]);